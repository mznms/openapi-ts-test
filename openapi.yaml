openapi: "3.0.3"

info:
  title: "サンプルAPI"
  description: "サンプルとして作成したAPIです"
  version: "1.0.0"

components:
  schemas:
    User:
      type: object
      required:
        - id
        - name
        - email
      properties:
        id:
          type: integer
          format: int64
          description: "ユーザID"
        name:
          type: string
          description: "ユーザ名"
        email:
          type: string
          format: email
          description: "ユーザのメールアドレス"
      example:
        id: 10
        name: "John Doe"
        email: "j-d@example.com"
    Users:
      type: array
      items:
        $ref: "#/components/schemas/User"
      example:
        - id: 1
          name: "John Doe"
          email: "john@example.com"
        - id: 2
          name: "Fumio Kishida"
          email: "fumio@example.jp"
    Error:
      type: object
      required:
        - status
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

paths:
  "/users":
    get:
      summary: "ユーザ一覧の取得"
      tags: ["users"]
      deprecated: false
      responses:
        "200":
          description: "成功"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Users"
    put:
      summary: "ユーザの更新"
      tags: ["users"]
      deprecated: false
      requestBody:
        description: "更新するユーザ情報"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        '200':
          description: "更新成功"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Users"
        default:
          description: "予期せぬエラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/users/{userId}":
    get:
      summary: "ユーザの取得"
      tags: ["users"]
      deprecated: false
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: "取得するユーザのID"
      responses:
        "200":
          description: "更新成功"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"

servers:
- url: "http://localhost:3000"
  description: "ローカル環境"
- url: "http://sample.com"
  description: "本番環境"

tags:
  - name: "users"
    description: "ユーザの操作"
  - name: "posts"
    description: "記事の操作"
  - name: "shops"
    description: "店舗の操作"
